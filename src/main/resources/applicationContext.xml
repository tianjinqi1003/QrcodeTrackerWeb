<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!--<context:annotation-config/>-->
    <!--扫描注解包-->
    <context:component-scan base-package="com"/>

    <util:properties id="jdbcProps" location="classpath:jdbc.properties"/>

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <!--json视图拦截器，读取到@ResponseBody的时候去配置它-->
                <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>
    <!--json转化器，它可以将结果转化-->
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!--<bean id="jdbcProps" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">-->
    <!--<property name="location">-->
    <!--<value>classpath:jdbc.properties</value>-->
    <!--</property>-->
    <!--</bean>-->

    <!--视图解析-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 用于将对象转换为 JSON  转换器-->
    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
    <bean id="stringConverter"
          class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!--配置文件加载 init.properties-->
    <!--<bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
    <!--<property name="locations" value="classpath:jdbc.properties"/>-->
    <!--</bean>-->
    <!-- 使用Tomcat JDBC连接(池) -->
    <!--<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">-->
    <!--<property name="driverClassName" value="${jdbc.driverClass}"></property>-->
    <!--<property name="url" value="${jdbc.url}"></property>-->
    <!--<property name="username" value="${jdbc.username}"></property>-->
    <!--<property name="password" value="${jdbc.password}"></property>-->
    <!--</bean>-->

    <!-- 配置sessionFactory-->

    <!-- 配置hibernateTemplate
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
       <property name="sessionFactory" ref="sessionFactory"/>
       <property name="checkWriteOperations" value="false"></property>
    </bean>-->

    <!-- 事务管理器
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>-->
    <!-- 使用annotation定义事务
    <tx:annotation-driven transaction-manager="transactionManager" />-->

    <!--  声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="delete*" propagation="REQUIRED" read-only="true"/>
              <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>-->
    <!--<aop:config>
         只对业务逻辑层实施事务
        <aop:pointcut expression="execution(* com.whut.worcom.qdhualing.qrcodetracker.servicevice..*.*(..))" id="businessService"/>
        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="businessService"/>
    </aop:config>-->

    <!--导入spring配置信息-->
   <import resource="classpath:spring-mybatis.xml" />

</beans>